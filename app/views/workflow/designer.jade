extends ../layouts/defualt

block title
	title 新建流程 - #{pkg.name}

block head-page
	link(href='/css/bootstrap-modal.css' rel='stylesheet')
	link(href='/css/bootstrap-modal-bs3patch.css' rel='stylesheet')
	link(href='/css/jquery.contextMenu.css' rel='stylesheet')
	link(href='/css/flowchart.css' rel='stylesheet')


block content
	.row
		.col-md-6.col-md-offset-3
			.well.well-sm
				form#form.form-horizontal(action='/schema', method='post')
					fieldset
						legend.text-center 新建流程
						input.hidden(name='_csrf', value=csrf_token)
						.form-group
							label.col-md-2.control-label(for='name') 名称
							.col-md-9
								input#name.form-control(name='name', type='text', placeholder='流程名称')
						.form-group
							label.col-md-2.control-label(for='description') 描述
							.col-md-9
								textarea#description.form-control(name='description', placeholder='请输入流程的描述......', rows='5')
						.form-group
							input.hidden(name='fields')
							.col-md-12.text-right.btn-toolbar
								button#workflow.btn.btn-success(type='button', data-toggle='modal', data-target=null, href='#designer') 设计流程
						.form-group
							.col-md-12.text-right.btn-toolbar
								button#cancel.btn.btn-default(type='button') 取消
								button#save.btn.btn-primary.btn-lg(type='submit') 新建
	#designer.modal.fade(tabindex='-1', role='dialog', aria-labelledby='myModalLabel', aria-hidden='true')
		.modal-dialog
			.modal-content
				.modal-header
					button.close(type='button', data-dismiss='modal')
						span(aria-hidden='true') ×
						span.sr-only 关闭
					h4.modal-title 流程设计
				.modal-body
					#designerContainer.designerContainer
						#start.node(data-id=0)
							strong start
						#end.node(data-id=-1)
							strong end
				.modal-footer
					button.btn.btn-default(type='button', data-dismiss='modal') 关闭
					button.btn.btn-primary(type='button') 保存

	#conn-modal.modal.fade(tabindex='-1', role='dialog', aria-labelledby='myModalLabel', aria-hidden='true')
		.modal-header
			button.close(type='button', data-dismiss='modal')
				span(aria-hidden='true') ×
				span.sr-only 关闭
			h4.modal-title 分支条件
		.modal-body
			.container
				form
					input#sepUuid(type='hidden')
					input#tepUuid(type='hidden')
					.form-group
						.checkbox
							label
								input#isOptional(type='checkbox')
								| 是否手选
					.form-group
						label(for='test') 条件
						textarea#test.form-control(type='text', rows='3')
		.modal-footer
			button.btn.btn-default(type='button', data-dismiss='modal') 取消
			button#saveconn.btn.btn-primary(type='button') 保存
	#node-modal.modal.fade(tabindex='-1', role='dialog', aria-labelledby='myModalLabel', aria-hidden='true')
		.modal-header
			button.close(type='button', data-dismiss='modal')
				span(aria-hidden='true') ×
				span.sr-only 关闭
			h4.modal-title 分支条件
		.modal-body
			.container
				form
					input#nodeId(type='hidden')
					.form-group
						.checkbox
							label
								input#tt(type='checkbox')
								| 是否手选
					.form-group
						label(for='ee') 条件
						textarea#ee.form-control(type='text', rows='3')
		.modal-footer
			button.btn.btn-default(type='button', data-dismiss='modal') 取消
			button#savenode.btn.btn-primary(type='button') 保存


block foot-script
	script.
		require(['jquery', 'jqueryUI', 'jsPlumb', 'contextMenu', 'bootstrap-modal'], function ($) {
			$(function () {
				$('#cancel').click(function () {
					if (history.length) {
						history.back();
					} else {
						window.close();
					}
				});

				$('#designer').one('shown.bs.modal', function () {
					jsPlumb.ready(function () {
						jsPlumb.importDefaults({
							Container: 'designerContainer',
							DragOptions: {cursor: 'pointer', zIndex: 2000},
							Endpoint: ["Dot", {radius: 10}],
							HoverPaintStyle: {strokeStyle: "#42a62c", lineWidth: 8},
							ConnectionOverlays: [
								["Arrow", {location: -7, id: "arrow", length: 14, foldback: 0.8}],
								["Label", {location: 0.1, id: "label"}]
							]
						});

						// 用于记录当前编辑属性的对象
						var currentConnection = null;
						var currentNode = null;
						var uuid = (function () {
							var _uuid = 0;
							return function () {
								return 'node_' + ++_uuid;
							}
						})();
						var sourcePoint = {
							uuid: 'start_ep',
							isSource: true,
							isTarget: false,
							maxConnections: -1,
							anchor: "Right"
						};
						var targetPoint = {
							uuid: 'end_ep',
							isSource: false,
							isTarget: true,
							maxConnections: -1,
							anchor: "Left",
							paintStyle: {fillStyle: 'red'},
							endpoint: ["Rectangle", {width: 12, height: 12}]
						};

						jsPlumb.addEndpoint('start', sourcePoint);
						jsPlumb.addEndpoint('end', targetPoint);

						// todo: add event context menu
						$('#designerContainer').contextMenu({
							selector: '.node',
							callback: function(key, options, o) {
								var m = "clicked: " + key;
								console.log(m);
								console.log(options);
								console.log(o);
							},
							items: {
								"edit": {name: "Edit", icon: "edit"},
								"cut": {name: "Cut", icon: "cut"},
								"copy": {name: "Copy", icon: "copy"},
								"delete": {
									name: "Delete",
									icon: "delete",
									callback: function(key, option) {
										console.log(option);
										console.log(this);
										jsPlumb.detachAllConnections(this);
										jsPlumb.getEndpoints(this).forEach(function (e) {
											jsPlumb.deleteEndpoint(e);
										});
										this.remove();
									}
								},
								"sep1": "---------",
								"quit": {name: "Quit", icon: "quit"}
							}
						});

						var taskNode = '<div class="node"><strong>新节点</strong></div>';
						$.contextMenu({
							selector: '#designerContainer',
							items: {
								"new": {
									name: "新建节点",
									icon: "new",
									callback: function (key, option) {
										var el = $(taskNode).appendTo('#designerContainer');
										var id = uuid();
										el.attr('id', id);
										sourcePoint.uuid = 'sep_' + id;
										targetPoint.uuid = 'tep_' + id;
										jsPlumb.addEndpoints(el, [sourcePoint, targetPoint]);
										jsPlumb.draggable(el);
									}
								},
								"paste": {name: "粘贴", icon: "paste"},
								"sep1": "---------",
								"save": {name: "保存", icon: "save"},
								"quit": {name: "Quit", icon: "quit"}
							}
						});

						// 连接事件
						jsPlumb.bind("connection", function (info, originalEvent) {
							if (info.connection.sourceId == info.connection.targetId) {
								jsPlumb.detach(info);
								alert("不能连接自己！");
							}
							$.each(jsPlumb.getEndpoints(info.source), function (i, el) {
								if (info.connection != el.connections[0] &&
												(el.connections[0].targetId == info.targetId || (el.connections[0].sourceId == info.targetId && el.connections[0].targetId == info.sourceId))) {
									jsPlumb.detach(info.connection);
									alert("不能重复连接！");
									return false;
								}
							});
						});

						// 保存属性
						$('#saveconn').click(function () {
							//jsPlumb.getEndpoint($('#sepUuid').val());
							var p = currentConnection.getParameters();
							p.isOptional = $('#isOptional').is(':checked');
							p.test = $('#test').val();
							currentConnection.setLabel('test');
						});
						$('#conn-modal').on('hidden.bs.modal', function() {
							$(this).find('form')[0].reset();
						});

						// 单击编辑连接属性
						jsPlumb.bind("click", function (connection) {
							//$('#sepUuid').val(connection.endpoints[0].getUuid());
							//$('#tepUuid').val(connection.endpoints[1].getUuid());
							var p = connection.getParameters();
							$('#isOptional').prop('checked', p.isOptional);
							$('#test').val(p.test);
							currentConnection = connection;
							$('#conn-modal').modal('show');
						});
						// 双击取消连接
						jsPlumb.bind("dblclick", function (connection, originalEvent) {
							alert();
							jsPlumb.detach(connection);
						});
						jsPlumb.draggable($('.node'));

					});
				});
			});
		});

